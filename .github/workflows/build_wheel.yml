# This file is autogenerated by maturin v0.14.16
# To update, run
#
#    maturin generate-ci github --platform all --zig -o .github/workflows/maturin.yml
#
name: Build wheels

on:
  push:
    branches:
      - latest
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *" # daily

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, aarch64, s390x, ppc64le]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --zig
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  emscripten:
    runs-on: ubuntu-latest
    env:
      PYODIDE_VERSION: "0.23.0"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11.2"
      - run: |
          pip install pyodide-build==${PYODIDE_VERSION}
          pyodide config get emscripten_version
          echo EMSCRIPTEN_VERSION=$(pyodide config get emscripten_version) >> $GITHUB_ENV
      - uses: mymindstorm/setup-emsdk@v12
        with:
          version: ${{ env.EMSCRIPTEN_VERSION }}
          actions-cache-folder: emsdk-cache
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: wasm32-unknown-emscripten
          args: --release --out dist -i python3.11
          sccache: 'true'
          rust-toolchain: nightly
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Publish wheels
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [sdist, linux, windows, macos, emscripten]
    permissions:
      contents: write

    steps:
      - name: Fetch wheels from artifacts
        id: fetch_artifacts
        uses: actions/download-artifact@v3
        with:
          path: 'dist/'

      # if it matches a Python release tag, upload to github releases
      # TODO: In the future, use the create-release and upload-release-assets actions
      - name: Release
        uses: fnkr/github-action-ghr@v1
        env:
          GHR_PATH: ${{steps.fetch_artifacts.outputs.download-path}}/artifact
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
