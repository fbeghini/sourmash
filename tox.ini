[tox]
envlist =
    fix_lint
    py311
    py310
    py39
    py38
    coverage
    codecov
    docs
    hypothesis
    khmer
    package_description
    khmer_master
isolated_build = true
skip_missing_interpreters = true
minversion = 3.22

[testenv]
description = run the tests with pytest under {envname}
passenv =
    CI
    CURL_CA_BUNDLE
    PIP_CACHE_DIR
    PYTEST_*
    PYTHONDEVMODE
    REQUESTS_CA_BUNDLE
    SSL_CERT_FILE
    TOXENV
    http_proxy
    https_proxy
    no_proxy
setenv =
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}{/}.coverage.{envname}}
    COVERAGE_PROCESS_START = {toxinidir}{/}pyproject.toml
extras =
    storage
    test
commands =
    pytest {posargs: \
      --cov "{envsitepackagesdir}{/}sourmash" \
      --cov-config "{toxinidir}{/}tox.ini" \
      --no-cov-on-fail --cov-report term-missing:skip-covered --cov-context=test \
      --cov-report html:{envtmpdir}{/}htmlcov \
      --cov-report xml:{toxworkdir}{/}coverage.{envname}.xml \
      --junitxml {toxworkdir}{/}junit.{envname}.xml \
      doc tests --durations 5}
    diff-cover --compare-branch {env:DIFF_AGAINST:origin/latest} {toxworkdir}{/}coverage.{envname}.xml
package = wheel
wheel_build_env = .pkg

[testenv:fix_lint]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
passenv =
    {[testenv]passenv}
    PRE_COMMIT_HOME
    PROGRAMDATA
basepython = python3.8
skip_install = true
deps =
    pre-commit>=2
extras =
    lint
commands =
    pre-commit run --all-files --show-diff-on-failure {posargs}
    python -c 'import pathlib; print("hint: run \{\} install to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}") / "bin" / "pre-commit"))'

[testenv:codecov]
description = [only run on CI]: upload coverage data to codecov (depends on coverage running first)
passenv =
    {[testenv]passenv}
    CODECOV_*
    GITHUB_ACTION
    GITHUB_HEAD_REF
    GITHUB_REF
    GITHUB_REPOSITORY
    GITHUB_RUN_ID
    GITHUB_SHA
skip_install = true
deps =
    codecov
changedir = {toxinidir}
commands =
    codecov -e $TOXENV --file "{toxworkdir}/coverage.xml" -F python {posargs}
depends = py39, py38, py37, pypy3

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
passenv =
    HOME
basepython = python3.8
extras =
    doc
changedir = {toxinidir}
commands =
    sphinx-build -d "{toxworkdir}/docs_doctree" doc "{toxworkdir}/docs_out" --color -bhtml {posargs}
    python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'
whitelist_externals = pandoc

[testenv:hypothesis]
commands =
    pytest \
      --cov "{envsitepackagesdir}/sourmash" \
      --cov-config "{toxinidir}/tox.ini" \
      --cov-report= \
      --junitxml {toxworkdir}/junit.{envname}.xml \
      --run-hypothesis \
      --hypothesis-show-statistics \
      --hypothesis-profile ci \
      {posargs:.}

[testenv:khmer]
basepython = python3.8
deps =
    khmer
commands =
    pytest \
      --cov "{envsitepackagesdir}/sourmash" \
      --cov-config "{toxinidir}/tox.ini" \
      --cov-report= \
      --junitxml {toxworkdir}/junit.{envname}.xml \
      -k test_nodegraph \
      {posargs:.}

[testenv:package_description]
description = check that the long description is valid
basepython = python3.8
skip_install = true
deps =
    pip>=19.1
    readme-renderer[md]>=24
    twine>=1.12.1
extras =
changedir = {toxinidir}
commands =
    pip wheel -w {envtmpdir}/build --no-deps .
    twine check {envtmpdir}/build/*

[testenv:khmer_master]
basepython = python3.8
deps =
    -e
commands =
    pytest \
      --cov "{envsitepackagesdir}/sourmash" \
      --cov-config "{toxinidir}/tox.ini" \
      --cov-report= \
      --junitxml {toxworkdir}/junit.{envname}.xml \
      -k test_nodegraph \
      {posargs:.}

[testenv:pypy3]
deps =
    pip>=19.3.1
    psutil<=5.6.7

[testenv:asv]
description = run asv for benchmarking (compare current commit with latest)
deps =
    asv==0.5.1
    virtualenv
changedir = {toxinidir}
commands =
    asv machine --yes
    asv continuous latest HEAD {posargs}

[testenv:mypy]
description = run mypy checker
passenv =
    {[testenv]passenv}
    PROGRAMDATA
basepython = python3.8
deps =
    mypy
commands =
    mypy src/sourmash

[testenv:X]
description = print the positional arguments passed in with echo
commands =
    echo {posargs}

[testenv:dev]
description = dev environment with all deps at {envdir}
usedevelop = true
extras =
    doc
    storage
    test
commands =
    python -m pip list --format=columns
    python -c "print(r'{envpython}')"

[gh-actions]
python =
    3.10: py310, docs, package_description, coverage, codecov
    3.11: py311, coverage, codecov
    3.9: py39, coverage, codecov
    3.8: py38, coverage, codecov

[flake8]
max-complexity = 22
max-line-length = 99
ignore = E203, W503, C901, E402, B011

[pep8]
max-line-length = 99
